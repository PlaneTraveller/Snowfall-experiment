#+title: Snowfall Experiment

My experiments with declaritive systems using snowfall.

* Construction Site
** Nix plans
- [ ] understand module system and custom options

** Nix stack
- [ ] templates
- [ ] refactor! emacs, shell, direnv, just, etc
- [ ] rewrite README and refactor note structure
- [ ] use stylix
- [ ] fix
- [ ] read old responses to my questions
- [ ] optimize emacs-nix
- [ ] desktop env remake
- [ ] list essential functionalities, evaluate if possible to finish tonight
- [X] figure out how to write hyprland conf
- [X] which one is better? hyprland syntax or nix syntax? (nix syntax!)
- [X] find sample config
- [X] check out ags
- [X] install NH
- [X] watch vimjoyer
- [X] enable basic hyprland
- [X] fix bugs (maintain)


** Example Configs
- [[https://nixos.wiki/wiki/Configuration_Collection][Configuration Collection]]
- [[https://github.com/IogaMaster/snowfall-starter][Snowflake Starter]]
- [[https://github.com/librephoenix/nixos-config][librephoenix]]
- [[https://github.com/IogaMaster/dotfiles][IogaMaster]]
- [[https://github.com/jakehamilton/config/tree/main][Jake Hamilton]]
- [[https://github.com/Misterio77/nix-starter-configs][nix-starter-config]]
- [[https://github.com/ryan4yin/nix-config][Ryan4yin]]
- [[https://github.com/EmergentMind/nix-config][EmergentMind]]
- [[https://github.com/XNM1/linux-nixos-hyprland-config-dotfiles][Nixos-hyprland (not good)]]
- [[https://github.com/AlexNabokikh/nix-config][Another hyprland based conf]]

** Tutorials
- [[https://nixcloud.io/tour/?id=introduction/nix][A tour of Nix]]
- [[https://nixos-and-flakes.thiscute.world/zh/preface][this cute]]
- [[https://www.youtube.com/watch?v=nLwbNhSxLd4][Everything in one place]]

* Learning Nix
- [[https://edolstra.github.io/pubs/phd-thesis.pdf][Original Thesis]]

* Modules hierarchy
*** Necessary
- home
- user
- hardware
- system

*** Apps
- services
- apps
- tools
- desktop
* Softwares
- Hyprland
- AGS
- Stylix
- NH (nix helper)

* Installation
:PROPERTIES:
:VISIBILITY: folded
:END:
** Stack
- [X] preferred way to install? by snowfall & flake
- [X] disko: dual boot? migrate existing setup? different for different systems?
- [X] nixos-anywhere
- [X] just dirty-install!
- [X] get unstable iso
- [X] write Outpost config
- [X] understand and try writing a good btrfs boilerplate disko file w. automation. If not easy, just manually partition
- [ ] how ioga's conf work? what's behind the install? the precedure? build iso?
** Disko
- lvm-vg
- btrfs
- My decision is: No swap!
- An article about swap: https://chrisdown.name/2018/01/02/in-defence-of-swap.html
** Deploy
*** Tools
- deploy-rs
- nixos-anywhere
- kexec
- nixos-generators
- https://github.com/IogaMaster/blizzard

*** How
- kexec: basically load another kernal (the installer)
- nixos-generators: to generate a kexec image
- nixos-anywhere: autoinstall
- deploy-rs: auto check for deployment (ssh stuff)
- Testing:
#+begin_src bash
nix build ./#nixosConfigurations.HOSTNAME.config.system.build.installTest -L
#+end_src
*** I locked myself out.
- [[https://www.reddit.com/r/NixOS/comments/126wz0j/locked_myself_out_passwords_dont_work_anymore/][Reddit post]]
- [[https://askubuntu.com/questions/766048/mount-unknown-filesystem-type-lvm2-member][LVM problem]]
- just reinstall in the iso (sign)

*** Note
- Need root access & password at new machine
#+begin_src bash
nix run .#install -- <hostname> <ip-address>
#+end_src
- the ping will never stop, and the hostname is not ~nixos~
- manually change the ip and hostname! Need to provide root password!
